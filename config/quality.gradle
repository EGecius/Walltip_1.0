apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

// todo re-add 'pmd' task - CI was failing wit OutOfMemoryError
//todo re-add 'checkstyle' task - currently failing with silly error
check.dependsOn 'findbugs', 'lint'

task checkstyle(type: Checkstyle) {
    description 'checks whehter code style of source code mathes set criteria'
    group 'verification'
    configFile file("${project.rootDir}/config/quality/checkstyle/checkstyleAllErrors.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**', 'test/**', 'androidTest/**'
    classpath = files()
    ignoreFailures = false
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {
    description 'finds bug via static analysis of byte code'
    group 'verification'
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/config/quality/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        description 'finds bug via static analysis of bytecode'
        xml.enabled = false
        html.enabled = true
    }

    classpath = files()
}

task pmd(type: Pmd) {
    description 'finds bug via static analysis of source code'
    group 'verification'
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/config/quality/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

android {
    lintOptions {
        abortOnError true
        warningsAsErrors true
        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
    }
}
